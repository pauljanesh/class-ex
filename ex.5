export function parseSafe(str) {
  const val = parseInt(str);
  if (isNaN(val)) throw new Error('NaN');
  return val;
}

export function ex4_v1(input) {
  try {
    const [factorsPart, multiplesPart] = input.split(":").map(s => s.trim());
    const factors = factorsPart.split(" ").map(parseSafe);
    const multiples = multiplesPart.split(" ").map(parseSafe);

    const result = multiples
      .filter(m => factors.some(f => m % f === 0))
      .reduce((a, b) => a + b, 0);

    return `${result} : ${factorsPart} : ${multiplesPart}`;
  } catch (e) {
    return `corrupt : ${input}`;
  }
}
